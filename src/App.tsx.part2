function App() {
  return (
    <AuthProvider>
      <Router>
        <Routes>
          <Route path="/login" element={<Login />} />
          
          {/* Route de débogage (à supprimer en production) */}
          <Route path="/debug" element={<DebugPage />} />
          
          {/* Routes SuperAdmin */}
          <Route path="/superadmin" element={
            <ProtectedRoute requiredRole="superadmin">
              <Layout>
                <SuperAdminDashboard />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/superadmin/companies" element={
            <ProtectedRoute requiredRole="superadmin">
              <Layout>
                <CompanyManagement />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/superadmin/billing" element={
            <ProtectedRoute requiredRole="superadmin">
              <Layout>
                <BillingManagement />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/superadmin/subscription/*" element={
            <ProtectedRoute requiredRole="superadmin">
              <Layout>
                <SubscriptionManagementModule />
              </Layout>
            </ProtectedRoute>
          } />
          
          {/* Route conservée pour la compatibilité */}
          <Route path="/superadmin/subscription-plans" element={
            <ProtectedRoute requiredRole="superadmin">
              <Layout>
                <Navigate to="/superadmin/subscription" replace />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/superadmin/extension-requests" element={
            <ProtectedRoute requiredRole="superadmin">
              <Layout>
                <ExtensionRequestsPage />
              </Layout>
            </ProtectedRoute>
          } />
          
          {/* Routes Admin */}
          <Route path="/admin" element={
            <ProtectedRoute>
              <Layout>
                <AdminDashboard />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/admin/employees" element={
            <ProtectedRoute>
              <Layout>
                <EmployeeManagement />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/admin/employees/:id" element={
            <ProtectedRoute>
              <Layout>
                <EmployeeDetailsPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/admin/offices" element={
            <ProtectedRoute>
              <Layout>
                <OfficeManagementPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/admin/organization" element={
            <ProtectedRoute>
              <Layout>
                <OrganizationManagement />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/admin/webhooks" element={
            <ProtectedRoute> {/* Assuming general admin access, refine with specific role if needed */}
              <Layout>
                <WebhookManagementPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/admin/webhooks" element={
            <ProtectedRoute> {/* Assuming general admin access, refine with specific role if needed */}
              <Layout>
                <WebhookManagementPage />
              </Layout>
            </ProtectedRoute>
          } />

          {/* Dashboards par rôle */}
          <Route path="/chef-service" element={
            <ProtectedRoute requiredRole="chef_service">
              <Layout>
                <ChefServiceDashboard />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/chef-projet" element={
            <ProtectedRoute requiredRole="chef_projet">
              <Layout>
                <ChefProjetDashboard />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/manager" element={
            <ProtectedRoute requiredRole="manager">
              <Layout>
                <ManagerDashboard />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/auditeur" element={
            <ProtectedRoute requiredRole="auditeur">
              <Layout>
                <AuditeurDashboard />
              </Layout>
            </ProtectedRoute>
          } />
          
          {/* Nouvelles routes */}
          <Route path="/reports" element={
            <ProtectedRoute>
              <Layout>
                <Reports />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/team-calendar" element={
            <ProtectedRoute>
              <Layout>
                <TeamCalendarPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/geofencing" element={
            <ProtectedRoute>
              <Layout>
                <GeofencingPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/missions" element={
            <ProtectedRoute>
              <Layout>
                <Missions />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/advanced" element={
            <ProtectedRoute>
              <Layout>
                <AdvancedFeatures />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/roles" element={
            <ProtectedRoute>
              <Layout>
                <RoleManagementPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/leave" element={
            <ProtectedRoute>
              <Layout>
                <RequestLeavePage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/leave/history" element={
            <ProtectedRoute>
              <Layout>
                <MyLeaveHistoryPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/subscription-plans" element={
            <ProtectedRoute>
              <Layout>
                <SubscriptionPlanPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/settings" element={
            <ProtectedRoute>
              <Layout>
                <Settings />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/history" element={
            <ProtectedRoute>
              <Layout>
                <History />
              </Layout>
            </ProtectedRoute>
          } />

          {/* Routes d'authentification et de profil */}
          <Route path="/profile" element={
            <ProtectedRoute>
              <Layout>
                <Profile />
              </Layout>
            </ProtectedRoute>
          } />
          
          {/* Routes de présence */}
          <Route path="/attendance" element={
            <ProtectedRoute>
              <Layout>
                <AttendancePage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/attendance/home" element={
            <ProtectedRoute>
              <Layout>
                <AttendanceHome />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/attendance/checkin" element={
            <ProtectedRoute>
              <Layout>
                <CheckInPage />
              </Layout>
            </ProtectedRoute>
          } />
          <Route path="/checkin" element={
            <ProtectedRoute>
              <CheckIn />
            </ProtectedRoute>
          } />
          <Route path="/checkout" element={
            <ProtectedRoute>
              <Checkout />
            </ProtectedRoute>
          } />
          <Route path="/pause" element={
            <ProtectedRoute>
              <PausePage />
            </ProtectedRoute>
          } />
          
          {/* Route par défaut */}
          <Route path="/" element={
            <ProtectedRoute>
              <Layout>
                <Dashboard />
              </Layout>
            </ProtectedRoute>
          } />
          
          {/* Redirection pour les routes inconnues */}
          <Route path="*" element={<Navigate to="/" />} />
        </Routes>
      </Router>
    </AuthProvider>
  )
}

export default App
