version: '3.8'

services:
  frontend:
    build: .
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - pointflex-dev

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql+psycopg://pointflex:pointflex@postgres:5432/pointflex
      - TEST_DATABASE_URL=postgresql+psycopg://pointflex:pointflex@postgres:5432/pointflex_test
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./backend/instance:/app/instance
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pointflex-dev

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: pointflex
      POSTGRES_USER: pointflex
      POSTGRES_PASSWORD: pointflex
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pointflex"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pointflex-dev

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - pointflex-dev

networks:
  pointflex-dev:
    driver: bridge

volumes:
  postgres_data:
